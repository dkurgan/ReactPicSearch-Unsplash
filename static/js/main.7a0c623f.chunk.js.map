{"version":3,"sources":["components/SearchBar.js","api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","axios","create","baseURL","headers","Authorization","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"6PA6BeA,E,2MA1BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAAAC,GACbA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,wEAGvB,IAAD,OACP,OACE,yBAAKM,UAAU,cACb,0BAAMA,UAAU,UAAUD,SAAUE,KAAKN,cACvC,yBAAKK,UAAU,SACb,iDAA8B,IAC9B,2BACEE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,kB,GAlBpCK,IAAMC,W,QCAfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,2DC8BRC,G,kBA/BX,WAAYjB,GAAQ,IAAD,8BACf,4CAAMA,KAUVkB,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKX,SAAS,CAAEe,WAZhB,EAAK5B,MAAQ,CAAE4B,MAAO,GAEtB,EAAKH,SAAWV,IAAMgB,YALP,E,iFASfvB,KAAKiB,SAASC,QAAQM,iBAAiB,OAAQxB,KAAKe,Y,+BAS9C,IAAD,EACyBf,KAAKH,MAAM4B,MAAjCC,EADH,EACGA,YAAaC,EADhB,EACgBA,KAErB,OACI,yBAAKC,MAAO,CAACC,WAAW,QAAD,OAAU7B,KAAKR,MAAM4B,SACxC,yBAAKU,IAAK9B,KAAKiB,SAAUc,IAAKL,EAC1BM,IAAKL,EAAKM,e,GA1BN1B,IAAMC,YCYf0B,EATG,SAACrC,GACf,IAAMsC,EAAStC,EAAMsC,OAAOC,KAAI,SAACX,GAC7B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG5C,OACI,yBAAK1B,UAAU,cAAcoC,ICgBtBI,E,2MAnBX/C,MAAQ,CAAE2C,OAAQ,I,EAElBK,e,uCAAiB,WAAM/C,GAAN,eAAAgD,EAAA,sEACUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAOpD,KAFR,OACPqD,EADO,OAIb,EAAKzC,SAAS,CAAE8B,OAAQW,EAASC,KAAKC,UAJzB,2C,8HAQb,OACI,yBAAKjD,UAAU,eAAe6B,MAAO,CAAEqB,UAAW,SAC9C,kBAAC,EAAD,CAAWnD,SAAUE,KAAKwC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQnC,KAAKR,MAAM2C,c,GAd5B5B,IAAMC,WCHxB0C,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.7a0c623f.chunk.js","sourcesContent":["import React from 'react'\n\nclass SearchBar extends React.Component {\n  state = { term: '' }\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.term);\n  }\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <label> Image Search </label>{' '}\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={e => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID -f82aFK2D5AyiUn4EO1rvE0Ejm23UQIBmMExmMRJJ5s'\n    }\n});\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { spans: 0 };\n\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n\n        this.setState({ spans });\n    }\n\n    render() {\n        const { description, urls } = this.props.image;\n\n        return (\n            <div style={{gridRowEnd: `span ${this.state.spans}`}}>\n                <img ref={this.imageRef} alt={description}\n                    src={urls.regular}\n                    />\n            </div>\n        )\n    }\n}\n\nexport default ImageCard","import './ImageList.css';\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\n\nconst ImageList = (props) => {\n    const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image}/>\n    });\n\n    return (\n        <div className=\"image-list\">{images}</div>\n    );\n}\nexport default ImageList","import React from 'react';\nimport SearchBar from './SearchBar';\nimport unsplash from '../api/unsplash';\nimport ImageList from './ImageList';\n\n\n\nclass App extends React.Component{\n    state = { images: [] };\n\n    onSearchSubmit = async(term) => {\n        const response = await unsplash.get('/search/photos', {\n            params: { query: term },\n        });\n        this.setState({ images: response.data.results });\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{ marginTop: '10px' }}>\n                <SearchBar onSubmit={this.onSearchSubmit}/>\n                <ImageList images={this.state.images}/>\n            </div>\n        );\n    }\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);\n\n"],"sourceRoot":""}